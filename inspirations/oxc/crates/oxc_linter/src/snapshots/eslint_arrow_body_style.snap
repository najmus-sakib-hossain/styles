---
source: crates/oxc_linter/src/tester.rs
---
  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:22]
 1 │ for (var foo = () => { return a in b ? bar : () => {} } ;;);
   ·                      ──────────────────────────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:28]
 1 │ a in b; for (var f = () => { return c };;);
   ·                            ────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:15]
 1 │ for (a = b => { return c in d ? e : f } ;;);
   ·               ─────────────────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:20]
 1 │ for (var f = () => { return a };;);
   ·                    ────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:22]
 1 │ for (var f;f = () => { return a };);
   ·                      ────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:20]
 1 │ for (var f = () => { return a in c };;);
   ·                    ─────────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:22]
 1 │ for (var f;f = () => { return a in c };);
   ·                      ─────────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:24]
 1 │ for (;;){var f = () => { return a in c }}
   ·                        ─────────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:15]
 1 │ for (a = b => { return c = d in e } ;;);
   ·               ─────────────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:22]
 1 │ for (var a;;a = b => { return c = d in e } );
   ·                      ─────────────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:27]
 1 │ for (let a = (b, c, d) => { return vb && c in d; }; ;);
   ·                           ────────────────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:27]
 1 │ for (let a = (b, c, d) => { return v in b && c in d; }; ;);
   ·                           ────────────────────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:43]
 1 │ function foo(){ for (let a = (b, c, d) => { return v in b && c in d; }; ;); }
   ·                                           ────────────────────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:24]
 1 │ for ( a = (b, c, d) => { return v in b && c in d; }; ;);
   ·                        ────────────────────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:18]
 1 │ for ( a = (b) => { return (c in d) }; ;);
   ·                  ───────────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:27]
 1 │ for (let a = (b, c, d) => { return vb in dd ; }; ;);
   ·                           ─────────────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:27]
 1 │ for (let a = (b, c, d) => { return vb in c in dd ; }; ;);
   ·                           ──────────────────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:18]
 1 │ do{let a = () => {return f in ff}}while(true){}
   ·                  ────────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:30]
 1 │ do{for (let a = (b, c, d) => { return vb in c in dd ; }; ;);}while(true){}
   ·                              ──────────────────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:21]
 1 │ scores.map(score => { return x in +(score / maxScore).toFixed(2)});
   ·                     ─────────────────────────────────────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:22]
 1 │ const fn = (a, b) => { return a + x in Number(b) };
   ·                      ─────────────────────────────
   ╰────

  ⚠ eslint(arrow-body-style): Expected block statement surrounding arrow body.
   ╭─[arrow_body_style.tsx:1:17]
 1 │ var foo = () => 0
   ·                 ─
   ╰────

  ⚠ eslint(arrow-body-style): Expected block statement surrounding arrow body.
   ╭─[arrow_body_style.tsx:1:17]
 1 │ var foo = () => 0;
   ·                 ─
   ╰────

  ⚠ eslint(arrow-body-style): Expected block statement surrounding arrow body.
   ╭─[arrow_body_style.tsx:1:17]
 1 │ var foo = () => ({});
   ·                 ────
   ╰────

  ⚠ eslint(arrow-body-style): Expected block statement surrounding arrow body.
   ╭─[arrow_body_style.tsx:1:17]
 1 │ var foo = () => (  {});
   ·                 ──────
   ╰────

  ⚠ eslint(arrow-body-style): Expected block statement surrounding arrow body.
   ╭─[arrow_body_style.tsx:1:8]
 1 │ (() => ({}))
   ·        ────
   ╰────

  ⚠ eslint(arrow-body-style): Expected block statement surrounding arrow body.
   ╭─[arrow_body_style.tsx:1:8]
 1 │ (() => ( {}))
   ·        ─────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:17]
 1 │ var foo = () => { return 0; };
   ·                 ─────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:17]
 1 │ var foo = () => { return 0 };
   ·                 ────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:17]
 1 │ var foo = () => { return bar(); };
   ·                 ─────────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; put a value of `undefined` immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:17]
 1 │ var foo = () => {};
   ·                 ──
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body.
   ╭─[arrow_body_style.tsx:1:17]
 1 │ ╭─▶ var foo = () => {
 2 │ │               return 0;
 3 │ ╰─▶             };
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:17]
 1 │ var foo = () => { return { bar: 0 }; };
   ·                 ──────────────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:17]
 1 │ var foo = () => { return ({ bar: 0 }); };
   ·                 ────────────────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:17]
 1 │ var foo = () => { return a, b }
   ·                 ───────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:17]
 1 │ var foo = () => { return };
   ·                 ──────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:17]
 1 │ var foo = () => { return; };
   ·                 ───────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:17]
 1 │ var foo = () => { return ( /* a */ {ok: true} /* b */ ) };
   ·                 ─────────────────────────────────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:17]
 1 │ var foo = () => { return '{' };
   ·                 ──────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:17]
 1 │ var foo = () => { return { bar: 0 }.bar; };
   ·                 ──────────────────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body.
   ╭─[arrow_body_style.tsx:1:27]
 1 │ ╭─▶ var foo = (retv, name) => {
 2 │ │               retv[name] = true;
 3 │ │               return retv;
 4 │ ╰─▶             };
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body.
   ╭─[arrow_body_style.tsx:1:17]
 1 │ var foo = () => { bar };
   ·                 ───────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:17]
 1 │ var foo = () => { return 0; };
   ·                 ─────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:17]
 1 │ var foo = () => { return bar(); };
   ·                 ─────────────────
   ╰────

  ⚠ eslint(arrow-body-style): Expected block statement surrounding arrow body.
   ╭─[arrow_body_style.tsx:1:17]
 1 │ var foo = () => ({});
   ·                 ────
   ╰────

  ⚠ eslint(arrow-body-style): Expected block statement surrounding arrow body.
   ╭─[arrow_body_style.tsx:1:17]
 1 │ var foo = () => ({ bar: 0 });
   ·                 ────────────
   ╰────

  ⚠ eslint(arrow-body-style): Expected block statement surrounding arrow body.
   ╭─[arrow_body_style.tsx:1:17]
 1 │ var foo = () => (((((((5)))))));
   ·                 ───────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:50]
 1 │ var foo = /* a */ ( /* b */ ) /* c */ => /* d */ { /* e */ return /* f */ 5 /* g */ ; /* h */ } /* i */ ;
   ·                                                  ──────────────────────────────────────────────
   ╰────

  ⚠ eslint(arrow-body-style): Expected block statement surrounding arrow body.
   ╭─[arrow_body_style.tsx:1:50]
 1 │ var foo = /* a */ ( /* b */ ) /* c */ => /* d */ ( /* e */ 5 /* f */ ) /* g */ ;
   ·                                                  ─────────────────────
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:17]
 1 │ ╭─▶ var foo = () => {
 2 │ │               return bar;
 3 │ ╰─▶             };
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:17]
 1 │ ╭─▶ var foo = () => {
 2 │ ╰─▶             return bar;};
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:1:17]
 1 │ ╭─▶ var foo = () => {return bar;
 2 │ ╰─▶             };
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:2:34]
 1 │     
 2 │ ╭─▶                           var foo = () => {
 3 │ │                               return foo
 4 │ │                                 .bar;
 5 │ ╰─▶                           };
 6 │                             
   ╰────

  ⚠ eslint(arrow-body-style): Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.
   ╭─[arrow_body_style.tsx:2:34]
 1 │     
 2 │ ╭─▶                           var foo = () => {
 3 │ │                               return {
 4 │ │                                 bar: 1,
 5 │ │                                 baz: 2
 6 │ │                               };
 7 │ ╰─▶                           };
 8 │                             
   ╰────

  ⚠ eslint(arrow-body-style): Expected block statement surrounding arrow body.
   ╭─[arrow_body_style.tsx:1:17]
 1 │ var foo = () => ({foo: 1}).foo();
   ·                 ────────────────
   ╰────

  ⚠ eslint(arrow-body-style): Expected block statement surrounding arrow body.
   ╭─[arrow_body_style.tsx:1:17]
 1 │ var foo = () => ({foo: 1}.foo());
   ·                 ────────────────
   ╰────

  ⚠ eslint(arrow-body-style): Expected block statement surrounding arrow body.
   ╭─[arrow_body_style.tsx:1:17]
 1 │ var foo = () => ( {foo: 1} ).foo();
   ·                 ──────────────────
   ╰────

  ⚠ eslint(arrow-body-style): Expected block statement surrounding arrow body.
   ╭─[arrow_body_style.tsx:2:34]
 1 │     
 2 │ ╭─▶                           var foo = () => ({
 3 │ │                                 bar: 1,
 4 │ │                                 baz: 2
 5 │ ╰─▶                             });
 6 │                             
   ╰────

  ⚠ eslint(arrow-body-style): Expected block statement surrounding arrow body.
   ╭─[arrow_body_style.tsx:2:54]
 1 │     
 2 │ ╭─▶                           parsedYears = _map(years, (year) => (
 3 │ │                                 {
 4 │ │                                     index : year,
 5 │ │                                     title : splitYear(year)
 6 │ │                                 }
 7 │ ╰─▶                           ));
 8 │                             
   ╰────

  ⚠ eslint(arrow-body-style): Expected block statement surrounding arrow body.
   ╭─[arrow_body_style.tsx:1:33]
 1 │ const createMarker = (color) => ({ latitude, longitude }, index) => {};
   ·                                 ──────────────────────────────────────
   ╰────
